/// Función para obtener el tamaño de fuente
/// 
/// Devuelve el tamaño de fuente correspondiente a la clave proporcionada en el mapa de tamaños.
/// 
/// @author Miguel
/// @since 1.0.0
/// @group Typography
@function font-size($size) {
  @return map-get($font-sizes, $size);
}

/// Función para obtener el valor de un breakpoint
/// 
/// Devuelve el valor del punto de corte correspondiente a la clave proporcionada en el mapa de breakpoints.


@function breakpoint($size) {
  @return map-get($breakpoints, $size);
}

/// Mixin para centrar elementos con flexbox
/// 
/// Aplica `display: flex` y centra los elementos tanto horizontal como verticalmente.
/// 

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

/// Mixin para estilos de botones
/// 
/// Define estilos básicos para botones, con colores, padding y efectos de hover.
/// 
/// @param {Color} $bg-color - Color de fondo del botón.
/// @param {Color} $text-color - Color del texto del botón.
/// 

@mixin button-style($bg-color, $text-color) {
  background-color: $bg-color;
  color: $text-color;
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.3s ease;

  &:hover {
    background-color: darken($bg-color, 10%);
  }
}

/// Mixin para media queries
/// 
/// Permite aplicar estilos responsivos según el tamaño de dispositivo especificado.
/// 
/// @param {String} $device - El nombre del dispositivo o breakpoint.
/// 

@mixin responsive($device) {
  @media (max-width: breakpoint($device)) {
    @content;
  }
}

  